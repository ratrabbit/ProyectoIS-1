--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: auto_incremento_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE auto_incremento_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE auto_incremento_id OWNER TO postgres;

--
-- Name: SEQUENCE auto_incremento_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON SEQUENCE auto_incremento_id IS 'Secuencia que auto incrementa la variable id';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: compra; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE compra (
    id_compra integer DEFAULT nextval('auto_incremento_id'::regclass) NOT NULL,
    id_usuario_compra integer NOT NULL,
    id_publicacion_compra integer NOT NULL
);


ALTER TABLE compra OWNER TO postgres;

--
-- Name: datos_usuario; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE datos_usuario (
    id_datos_usuario integer DEFAULT nextval('auto_incremento_id'::regclass) NOT NULL,
    nombre text NOT NULL,
    apellido_paterno text NOT NULL,
    apellido_materno text NOT NULL,
    email text,
    calle text NOT NULL,
    numero text NOT NULL,
    interior text,
    colonia text NOT NULL,
    ciudad text NOT NULL,
    estado_fk integer NOT NULL,
    imagen_usuario text NOT NULL,
    telefono text NOT NULL,
    edad integer NOT NULL,
    sexo text,
    id_usuario_fk integer NOT NULL,
    CONSTRAINT email_correcto CHECK ((email ~ '^[\w!#$%&''*+/=?`{|}~^-]+(\.[\w!#$%&''*+/=?`{|}~^-]+)*@[\w-]+(\.[\w-]+)*$'::text)),
    CONSTRAINT sexo_correcto CHECK (((sexo)::bpchar = ANY (ARRAY['f'::character(1), 'm'::character(1)])))
);


ALTER TABLE datos_usuario OWNER TO postgres;

--
-- Name: estado; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE estado (
    id_estado integer DEFAULT nextval('auto_incremento_id'::regclass) NOT NULL,
    estado_estado text NOT NULL
);


ALTER TABLE estado OWNER TO postgres;

--
-- Name: publicacion; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE publicacion (
    id_publicacion integer DEFAULT nextval('auto_incremento_id'::regclass) NOT NULL,
    nombre_producto text NOT NULL,
    descripcion text NOT NULL,
    imagenes text NOT NULL,
    precio_inical integer DEFAULT 0 NOT NULL,
    precio_final integer DEFAULT 0 NOT NULL,
    precio_actual integer DEFAULT 0 NOT NULL,
    id_usuario_publicacion integer NOT NULL
);


ALTER TABLE publicacion OWNER TO postgres;

--
-- Name: usuario; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE usuario (
    id_usuario integer DEFAULT nextval('auto_incremento_id'::regclass) NOT NULL,
    nombre_usuario text NOT NULL,
    contrasenia_usuario text NOT NULL
);


ALTER TABLE usuario OWNER TO postgres;

--
-- Name: auto_incremento_id; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('auto_incremento_id', 1, true);


--
-- Data for Name: compra; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY compra (id_compra, id_usuario_compra, id_publicacion_compra) FROM stdin;
\.


--
-- Data for Name: datos_usuario; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY datos_usuario (id_datos_usuario, nombre, apellido_paterno, apellido_materno, email, calle, numero, interior, colonia, ciudad, estado_fk, imagen_usuario, telefono, edad, sexo, id_usuario_fk) FROM stdin;
\.


--
-- Data for Name: estado; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY estado (id_estado, estado_estado) FROM stdin;
\.


--
-- Data for Name: publicacion; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY publicacion (id_publicacion, nombre_producto, descripcion, imagenes, precio_inical, precio_final, precio_actual, id_usuario_publicacion) FROM stdin;
\.


--
-- Data for Name: usuario; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY usuario (id_usuario, nombre_usuario, contrasenia_usuario) FROM stdin;
\.


--
-- Name: estado_pk; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY estado
    ADD CONSTRAINT estado_pk PRIMARY KEY (id_estado);


--
-- Name: id_compra_pk; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY compra
    ADD CONSTRAINT id_compra_pk PRIMARY KEY (id_compra);


--
-- Name: id_datos_usuario_pk; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY datos_usuario
    ADD CONSTRAINT id_datos_usuario_pk PRIMARY KEY (id_datos_usuario);


--
-- Name: id_publicacion; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY publicacion
    ADD CONSTRAINT id_publicacion PRIMARY KEY (id_publicacion);


--
-- Name: unique_email; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY datos_usuario
    ADD CONSTRAINT unique_email UNIQUE (email);


--
-- Name: unique_estado; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY estado
    ADD CONSTRAINT unique_estado UNIQUE (estado_estado);


--
-- Name: unique_nombre_usuario; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY usuario
    ADD CONSTRAINT unique_nombre_usuario UNIQUE (nombre_usuario);


--
-- Name: usuario_pk; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY usuario
    ADD CONSTRAINT usuario_pk PRIMARY KEY (id_usuario);


--
-- Name: estado_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY datos_usuario
    ADD CONSTRAINT estado_fk FOREIGN KEY (estado_fk) REFERENCES estado(id_estado);


--
-- Name: id_publicacion_compra; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY compra
    ADD CONSTRAINT id_publicacion_compra FOREIGN KEY (id_publicacion_compra) REFERENCES publicacion(id_publicacion);


--
-- Name: id_usuario_compra_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY compra
    ADD CONSTRAINT id_usuario_compra_fk FOREIGN KEY (id_usuario_compra) REFERENCES usuario(id_usuario);


--
-- Name: id_usuario_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY datos_usuario
    ADD CONSTRAINT id_usuario_fk FOREIGN KEY (id_usuario_fk) REFERENCES usuario(id_usuario);


--
-- Name: id_usuario_publicacion_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY publicacion
    ADD CONSTRAINT id_usuario_publicacion_fk FOREIGN KEY (id_usuario_publicacion) REFERENCES usuario(id_usuario);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

